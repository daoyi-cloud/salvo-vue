//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.16

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(schema_name = "infra", table_name = "infra_api_access_log")]
#[serde(rename_all = "camelCase")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub trace_id: String,
    pub user_id: i64,
    pub user_type: i16,
    pub application_name: String,
    pub request_method: String,
    pub request_url: String,
    #[sea_orm(column_type = "Text", nullable)]
    pub request_params: Option<String>,
    #[sea_orm(column_type = "Text", nullable)]
    pub response_body: Option<String>,
    pub user_ip: String,
    pub user_agent: String,
    pub operate_module: Option<String>,
    pub operate_name: Option<String>,
    pub operate_type: Option<i16>,
    pub begin_time: DateTime,
    pub end_time: DateTime,
    pub duration: i32,
    pub result_code: i32,
    pub result_msg: Option<String>,
    pub creator: Option<String>,
    pub create_time: DateTime,
    pub updater: Option<String>,
    pub update_time: DateTime,
    pub deleted: i16,
    pub tenant_id: i64,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
