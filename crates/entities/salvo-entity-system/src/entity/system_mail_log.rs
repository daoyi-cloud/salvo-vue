//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.16

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(schema_name = "system", table_name = "system_mail_log")]
#[serde(rename_all = "camelCase")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i64,
    pub user_id: Option<i64>,
    pub user_type: Option<i16>,
    pub to_mail: String,
    pub account_id: i64,
    pub from_mail: String,
    pub template_id: i64,
    pub template_code: String,
    pub template_nickname: Option<String>,
    pub template_title: String,
    pub template_content: String,
    pub template_params: String,
    pub send_status: i16,
    pub send_time: Option<DateTime>,
    pub send_message_id: Option<String>,
    pub send_exception: Option<String>,
    pub creator: Option<String>,
    pub create_time: DateTime,
    pub updater: Option<String>,
    pub update_time: DateTime,
    pub deleted: i16,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}
